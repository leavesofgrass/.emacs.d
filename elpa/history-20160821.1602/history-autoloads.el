;;; history-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (file-name-directory load-file-name)) (car load-path)))



;;; Generated autoloads from history.el

(autoload 'history-add-history "history" "\
Add current position into the database, which is `global-mark-ring'. If 
SAVE-THING? is t, it will cache the symbol string at point (if any) and use it as 
a comparison in checking algorithm when navigating to it. If they are not matched, 
the history will be deleted immediately.

(fn &optional SAVE-THING?)" t)
(autoload 'history-show-history "history" "\
Show histories in a pretty way." t)
(autoload 'history-goto-history "history" nil t)
(autoload 'history-kill-histories "history" "\
Discard all the histories." t)
(autoload 'history-prev-history "history" "\
Navigate to previous history." t)
(autoload 'history-next-history "history" "\
Navigate to next history." t)
(autoload 'history-toggle-window-local-history "history" "\
Switch between window-local history or global history mode.
See `history-window-local-history'." t)
(defvar history-mode nil "\
Non-nil if history mode is enabled.
See the `history-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `history-mode'.")
(custom-autoload 'history-mode "history" nil)
(autoload 'history-mode "history" "\
Add menus, toolbar buttons and more.

This is a global minor mode.  If called interactively, toggle the
`history mode' mode.  If the prefix argument is positive, enable
the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value \\='history-mode)'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "history" '("history-"))

;;; End of scraped data

(provide 'history-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; history-autoloads.el ends here
