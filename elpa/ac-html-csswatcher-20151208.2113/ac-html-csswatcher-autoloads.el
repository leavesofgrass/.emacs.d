;;; ac-html-csswatcher-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (file-name-directory load-file-name)) (car load-path)))



;;; Generated autoloads from ac-html-csswatcher.el

(autoload 'ac-html-csswatcher-refresh "ac-html-csswatcher" "\
Interactive version of `ac-html-csswatcher-setup-html-stuff-async' with nice name.

Refresh csswatcher." t)
(defalias 'company-web-csswatcher-refresh 'ac-html-csswatcher-refresh)
(autoload 'ac-html-csswatcher+ "ac-html-csswatcher" "\
Enable csswatcher for this buffer, csswatcher called after each current buffer save.
`ac-html-csswatcher+' automatically added to mode hook when you `ac-html-csswatcher-setup'." t)
(defalias 'company-web-csswatcher+ 'ac-html-csswatcher+)
(autoload 'ac-html-csswatcher-setup "ac-html-csswatcher" "\
1. Enable for web, html, haml etc hooks `ac-html-csswatcher+'

2. Setup `after-save-hook' for CSS modes.
Currently we suport only `css-mode' and `less-mode', but later style, sass, scsc etc will be included
when `csswatcher' support them.")
(defalias 'company-web-csswatcher-setup 'ac-html-csswatcher-setup)
(register-definition-prefixes "ac-html-csswatcher" '("AC-HTML-CSSWATCHER-LOG" "ac-html-csswatcher-"))

;;; End of scraped data

(provide 'ac-html-csswatcher-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; ac-html-csswatcher-autoloads.el ends here
